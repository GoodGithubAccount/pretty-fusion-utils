[config]
  name = "useAsync"
  brief = """\
  Returns a state object with an value from an asynchronous processor. The \
  processor is given a Use callback that adds dependencies, a Become callback \
  alter the current eventual value, and an inner scope to add cleanup tasks \
  to.\
  """

  variadics = ["Scope", "Result"]

[[config.args]]
  name = "scope"
  type = "Scope & Fusion.Scope"
  description = "The scope to store cleanup tasks."

[[config.args]]
  name = "fallback"
  type = "Result"
  description = "The fallback value to display while the processor runs."

[[config.args]]
  name = "processor"
  type = "(use: Fusion.Use, become: Become, scope: Scope) -> Result"
  description = """\
  The processor of the eventual value. It receives a Use callback, a Become \
  callback, and an inner scope.\
  """

[config.returns]
  type = "StateObject<Result>"
  description = "A state object with the asynchronous value."
